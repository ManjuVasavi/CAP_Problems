class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> l1=new ArrayList<>();
        if(root==null){
            return l1;
        }
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            List<Integer> l=new ArrayList<>();
            int z=q.size();
            for(int i=0;i<z;i++){
                TreeNode temp=q.poll();
                l.add(temp.val);
                if(temp.left!=null){
                    q.add(temp.left);
                }
                if(temp.right!=null){
                    q.add(temp.right);
                }
            }
            l1.add(l);
        }
        Collections.reverse(l1);
        return l1;
    }
}
