class Solution {
    int c=0;
    public void dfs(List<List<Integer>> rooms, int src, boolean[] visited) {
        if(visited[src]==true) {
            return;
        }
        visited[src]=true;
        for(int i=0;i<rooms.get(src). size();i++) {
            if(visited[rooms.get(src).get(i)]==false) {
dfs(rooms,rooms.get(src).get(i),visited); 
            }
        }
    }
    public boolean canVisitAllRooms(List<List<Integer>> rooms) {
        boolean[] visited=new boolean [rooms.size()];
        for(int i=0;i<visited.length;i++) {
            visited[i]=false;
        }
        dfs(rooms,0,visited) ;
        for(int i=0;i<visited.length;i++) {
            if(visited[i]==false) {
               // System. out. println(i);
                return false;
            }
        }
        return true;
    }
}
