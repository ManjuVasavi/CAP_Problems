class Solution {
    public void dfs(int[][] isConnected, boolean[] visited, int src) {
        visited [src]=true;
        for(int n=0;n<isConnected[0].length;n++) {
            if(isConnected[src][n]==1 && visited [n]==false) {
                dfs(isConnected, visited,n);
            }
        }
    }
    public int findCircleNum(int[][] isConnected) {
        int c=0;
        boolean[] visited=new boolean[isConnected.length];
        for(int i=0;i<visited.length;i++) {
            visited[i]=false;
        }
        for(int i=0;i<isConnected.length;i++) {
            if(!visited[i]) {
                c+=1;
                dfs(isConnected, visited,i);
            }
        }
        return c;
    }
}
